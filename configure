#!/usr/bin/env bash

name="tomatoshell"
name_log="tomatoshell_log.csv"

audio_path="etc/alarm.wav"

bin_dir="${HOME}/.local/bin/"
data_dir="${HOME}/.local/share/${name}"

install() {
    clean 2> /dev/null
    sudo cp $name $bin_dir &&
    mkdir -p "$data_dir" &&
    touch "$data_dir/$name_log" &&
    cp etc/alarm.wav $data_dir &&
    exit 0
}


uninstall() {
    sudo rm "$bin_dir/$name" 2> /dev/null &&
    rm -rf "$data_dir" 2> /dev/null &&
    exit 0
}


clean() {
   local csv_path="${data_dir}/${name_log}"

   # has an old tomatoshell binary or the audio file? if yet,
   # delete him.
   test -f "$csv_path" && rm "$csv_path"
   test -f "${data_path}/${audio_path}" && rm "$csv_path"

   cp etc/alarm.wav "$data_dir/"
   > "$csv_path"
}


print_help() {
    echo "usage: 'install', 'uninstall', 'clean'." &&
    echo "example: '$Â ./configure install' to install the program." &&
    exit 1
}


[ "$#" -eq 0 ] && print_help

if [ "$1" = "install" ]
then
    install || exit 1
fi

if [ "$1" = "uninstall" ]
then 
    uninstall || exit 1
fi

[ "$1" = "clean" ] && clean && exit 0 || exit 1

# if program executions ends here it means the user typed an invalid argument
# i use printf here because echo -e is undefined in POSIX sh
printf "%s\n\n" "invalid argument '$1'." && print_help
